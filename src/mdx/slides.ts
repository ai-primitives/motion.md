import { VFile } from "vfile"\n\nexport interface Slide {\n  content: string\n  type: "intro" | "outro" | "content"\n  duration?: number\n}\n\nexport function separateSlides(file: VFile): Slide[] {\n  const content = String(file)\n  const slides: Slide[] = []\n  \n  // Split content by horizontal rule (---) or heading (#)\n  const rawSlides = content.split(/\\n(?=#{1,6}\\s|---\\n)/)\n  \n  rawSlides.forEach((rawSlide, index) => {\n    const trimmedSlide = rawSlide.trim()\n    \n    // Skip empty slides\n    if (!trimmedSlide) return\n    \n    // Determine slide type\n    let type: Slide["type"] = "content"\n    if (index === 0 && trimmedSlide.toLowerCase().includes("intro")) {\n      type = "intro"\n    } else if (\n      index === rawSlides.length - 1 &&\n      trimmedSlide.toLowerCase().includes("outro")\n    ) {\n      type = "outro"\n    }\n    \n    slides.push({\n      content: trimmedSlide,\n      type,\n      duration: undefined // Will be calculated based on content/voiceover later\n    })\n  })\n  \n  return slides\n}
