import { describe, it, expect } from "vitest"\nimport {\n  baseSchema,\n  introSchema,\n  outroSchema,\n  codeSchema,\n  browserSchema,\n  videoSchema,\n  animationSchema,\n  memeSchema,\n  imageSchema,\n  screenshotSchema,\n  validateProps\n} from "./validation"\n\ndescribe("Props Validation", () => {\n  it("should validate base props", () => {\n    const validProps = {\n      duration: 5,\n      transition: "fade"\n    }\n    expect(() => validateProps(baseSchema, validProps)).not.toThrow()\n\n    const invalidProps = {\n      duration: -1\n    }\n    expect(() => validateProps(baseSchema, invalidProps)).toThrow()\n  })\n\n  it("should validate intro props", () => {\n    const validProps = {\n      title: "Welcome",\n      subtitle: "Presentation",\n      duration: 3\n    }\n    expect(() => validateProps(introSchema, validProps)).not.toThrow()\n\n    const invalidProps = {\n      title: "",\n      duration: 3\n    }\n    expect(() => validateProps(introSchema, invalidProps)).toThrow()\n  })\n\n  it("should validate browser props", () => {\n    const validProps = {\n      url: "https://example.com",\n      width: 1920,\n      height: 1080\n    }\n    expect(() => validateProps(browserSchema, validProps)).not.toThrow()\n\n    const invalidProps = {\n      url: "not-a-url",\n      width: -1\n    }\n    expect(() => validateProps(browserSchema, invalidProps)).toThrow()\n  })\n})\n
